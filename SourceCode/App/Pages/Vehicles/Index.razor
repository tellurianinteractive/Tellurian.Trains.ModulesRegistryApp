@page "/vehicles/"
@page "/vehicles/country/{CountryId:int}"
@using ModulesRegistry.Pages.Country

@attribute [Authorize(Policy = "Admin")]

@inject IStringLocalizer<App> Localizer
@inject ILocalStorageService LocalStorage
@inject NavigationManager Navigator
@inject VehicleService VehicleService
@inject CountryService CountryService
@inject AppService AppService

<PageHeading Label="Vehicles" IconClass="@FontAwesome.Train" PageAction="@PageAction.List"></PageHeading>

<ListboxSelector OnSelected="OnSelectedCountry" Items="Countries" ItemType="Country" IsVisible="true" SelectedId=CountryId LocalStorageKey="Country" />
<hr />
<VehiclesList Vehicles="Vehicles" MayEdit="true" ShowOwner="true" AddHrefFunc="AddHref" EditHrefFunc="EditHref" FilterName="AdminVehicleFilter" />
@code {
    [CascadingParameter] private Task<AuthenticationState>? authenticationStateTask { get; set; }
    [Parameter] public int CountryId { get; set; }
    ClaimsPrincipal? Principal;
    CountryFilter Filter = new();

    IEnumerable<ListboxItem>? Countries;
    IEnumerable<Vehicle>? Vehicles;

    int CountryOrDefaultId => CountryId > 0 ? CountryId : Filter.CountryId > 0 ? Filter.CountryId : Principal.CountryId();



    protected override async Task OnInitializedAsync()
    {
        Principal = await authenticationStateTask.GetClaimsPrincipalAsync();
        Countries = await CountryService.ListboxItemsAsync(Principal);
        Filter = await LocalStorage.GetItemAsync<CountryFilter>(nameof(CountryFilter)) ?? Filter;
    }

    protected override async Task OnParametersSetAsync()
    {
        if (CountryId > 0)
        {
            await LocalStorage.SetItemAsync(nameof(CountryFilter), Filter);
            Vehicles = await VehicleService.GetVehiclesByOwnerCountryAsync(Principal, CountryId);
        }
        else
        {
            OnSelectedCountry(CountryOrDefaultId);
        }
    }

    private void OnSelectedCountry(int id)
    {
        if (id > 0)
        {
            CountryId = id;
            Navigator.NavigateTo($"vehicles/country/{CountryId}");
        }
    }

    string EditHref(Vehicle vehicle) => $"/vehicles/{vehicle.Id}/country/{CountryId}/edit";
    string AddHref() => $"vehicles/0/country/{CountryId}/edit";
}


