@page "/Country/Statistics"

@inject IStringLocalizer<App> Localizer
@inject CountryService CountryService

<PageHeading Label="CountriesStatistics" IconClass="fa fa-flag" PageAction="@PageAction.List"  HelpContext="CountryStatistics" ShowHelpInitially=true/>
@if (CountryStatistics is null)
{
    <ActionMessage Label="FecthingData" />
}
else
{
    <TableTemplate Items="CountryStatistics.OrderByDescending(cs => cs.ModulesCount)">
        <TableHeader>
            <th>@Localizer["Country"] </th>
            <th></th>
            <th >@Localizer["Modules"] </th>
            <th >@Localizer["Stations"] </th>
            <th >@Localizer["CargoCustomers"] </th>
            <th >@Localizer["ExternalStations"] </th>
            <th >@Localizer["ExternalFreightCustomers"] </th>
        </TableHeader>
        <RowTemplate Context="item">
            <td width="5%"><img src="@FlagSrc(item)" /></td>
            <td width="10%">@item.EnglishName.AsLocalized()</td>
            <td width="15%" style="text-align: center">@item.ModulesCount</td>
            <td width="15%" style="text-align: center">@item.StationsCount</td>
            <td width="15%" style="text-align: center">@item.StationCustomersCount</td>
            <td width="15%" style="text-align: center">@item.ExternalStationsCount</td>
            <td width="15%" style="text-align: center">@item.ExternalCustomersCount</td>
        </RowTemplate>
    </TableTemplate>
}

@code {
        IEnumerable<CountryStatistics>? CountryStatistics;

    protected override async Task OnInitializedAsync()
    {
        CountryStatistics = await CountryService.GetCountryStatisticsAsync();
    }

    string FlagSrc(CountryStatistics cs) => $"images/flags/{cs.DomainSuffix}.png";
}
