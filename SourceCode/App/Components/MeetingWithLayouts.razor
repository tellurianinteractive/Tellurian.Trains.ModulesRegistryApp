@inject ITimeProvider TimeProvider
@inject IStringLocalizer<App> Localizer

@if (HasAllData)
{
    <div class="meeting">
        <div class="header">@MeetingParticipant.Meeting.Name, @MeetingParticipant.Meeting.CityName <span>@MeetingParticipant.Meeting.DisplayedStatus(TimeProvider.LocalTime)</span></div>
        <div class="info">@MeetingParticipant.Meeting.StartOrEventDate() - @MeetingParticipant.Meeting.EndDateOrTimes()</div>
        <div class="info">@Localizer["YouParticipateDays"]: <span class="strong">@string.Join(", ", MeetingParticipant.Days())</span></div>
        @if (MeetingParticipant.ArrivalTime.HasValue)
        {
            <div class="info">@Localizer["YourArrivalTime"]: <span class="strong">@MeetingParticipant.ArrivalTime!.Value.ToString("t")</span></div>
        }
        @if (MeetingParticipant.LayoutParticipations.Any())
        {
            <div>
                @Localizer["LayoutsYouAreParticipatingIn"]: <span class="layout">@string.Join(", ", MeetingParticipant.LayoutParticipations.Select(l => l.Layout.PrimaryModuleStandard.ShortName))</span>
            </div>
        }
        @if (MayEdit)
        {
            <AppButton Label="Edit" Href="@MeetingEditHref(MeetingParticipant)" />
        }
    </div>
}


@code {
    /// <summary>
    /// Shoud include Meeting, and LayoutParticipants with Layouts.
    /// </summary>
    [Parameter] public MeetingParticipant? MeetingParticipant { get; set; }
    [Parameter] public bool MayEdit { get; set; }

    string MeetingEditHref(MeetingParticipant participant) => $"Meetings/{participant.Meeting.Id}/Edit/{participant.PersonId}";

    [MemberNotNullWhen(true, nameof(MeetingParticipant))]
    bool HasAllData => MeetingParticipant is not null && MeetingParticipant.Meeting is not null && MeetingParticipant.LayoutParticipations.All(lp => lp.Layout is not null);
}
