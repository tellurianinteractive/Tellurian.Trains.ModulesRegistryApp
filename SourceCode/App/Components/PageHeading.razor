@inject IStringLocalizer<App> Localizer
@inject PageHistory PageHistory

<div>
    <div class="flex-container">
        <div style="flex-grow: 4">
            <span class="@IconClass" /><span>@Localizer.HeadingText(Label, ObjectName, Context, PageAction)</span>
        </div>
        <div class="noprint" style="flex-grow: 1; text-align:right">
            @if (IsHelpAvailable)
            {
                <span class="fa fa-question-circle" @onclick="ToggleHelp" />
            }
            <span class="fa fa-arrow-alt-circle-left" @onclick="@Back" />
        </div>
    </div>
    @if (HelpContentName.HasValue())
    {
        <ContentView ContentName="@HelpContentName" IsHidden="@HelpIsHidden" BackgroundColour="#ffffcc" />
    }
    <hr />
</div>
@code {
    [Parameter] public string? IconClass { get; set; }
    [Parameter] public string? Label { get; set; }
    [Parameter] public string? ObjectName { get; set; }
    [Parameter] public object? Context { get; set; }
    [Parameter] public PageAction PageAction { get; set; }
    [Parameter] public string? HelpContext { get; set; }
    [Parameter] public bool ShowHelpInitially { get; set; }

    bool HelpIsHidden => PageHistory.IsShowningHelp != true;
    bool IsHelpAvailable => HelpContext.HasValue();
    string? HelpContentName => string.IsNullOrWhiteSpace(HelpContext) ? null : $"Help/{HelpContext}";

    protected override void OnParametersSet()
    {
        PageHistory.IsShowningHelp = ShowHelpInitially;
    }

    void ToggleHelp()
    {
        PageHistory.IsShowningHelp = !PageHistory.IsShowningHelp;
    }

    void Back()
    {
        PageHistory.NavigateBack();
    }
}
